generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  username String
  id       Int    @id(map: "user_pkey") @default(autoincrement())
}

model Course {
  userId        Int
  startLocation String
  startDetail   String
  endLocation   String
  endDetail     String
  hashtag       String?
  scrap         Int?
  music         String
  totalTime     Int
  color1        String
  color2        String
  path          String
  createdAt     DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  description   String?
  id            Int      @id(map: "course_pkey") @default(autoincrement())
  drives        Drive[]
  scraps        Scrap[]
}

model Drive {
  courseId  Int?
  userId    Int
  startTime DateTime @default(dbgenerated("CURRENT_TIME")) @db.Time(6)
  endTime   DateTime @updatedAt @db.Time(6)
  date      DateTime @updatedAt @db.Date
  id        Int      @id(map: "drive_pkey") @default(autoincrement())
  Course    Course?  @relation(fields: [courseId], references: [id])
}

model Scrap {
  userId   Int
  courseId Int?
  id       Int     @id(map: "scrap_pkey") @default(autoincrement())
  Course   Course? @relation(fields: [courseId], references: [id])
}

model Photo {
  courseId Int    @unique
  photoUrl String
  id       Int    @id @default(autoincrement())
}
